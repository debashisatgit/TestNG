<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="14" passed="14" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2020-06-16T13:54:46 IST" name="SuiteLoanDep" finished-at="2020-06-16T13:54:46 IST" duration-ms="301">
    <groups>
      <group name="Smoke">
        <method signature="Test2.demo1()[pri:0, instance:FstTest.Test2@6b19b79]" name="demo1" class="FstTest.Test2"/>
        <method signature="Test3.WebloginCarlone()[pri:0, instance:FstTest.Test3@1a04f701]" name="WebloginCarlone" class="FstTest.Test3"/>
        <method signature="Test4.WebloginHomelone()[pri:0, instance:FstTest.Test4@4e91d63f]" name="WebloginHomelone" class="FstTest.Test4"/>
      </group> <!-- Smoke -->
    </groups>
    <test started-at="2020-06-16T13:54:46 IST" name="TestPersonalLoan" finished-at="2020-06-16T13:54:46 IST" duration-ms="140">
      <class name="FstTest.Test2">
        <test-method signature="MobileLoginCarlone(java.lang.String, java.lang.String)[pri:0, instance:FstTest.Test2@6b19b79]" started-at="2020-06-16T13:54:46 IST" name="MobileLoginCarlone" data-provider="getData" finished-at="2020-06-16T13:54:46 IST" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[FstUserName!!!!!!!!!!!!]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1stPassword!!!!!!!!!!!!]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileLoginCarlone -->
        <test-method signature="MobileLoginCarlone(java.lang.String, java.lang.String)[pri:0, instance:FstTest.Test2@6b19b79]" started-at="2020-06-16T13:54:46 IST" name="MobileLoginCarlone" data-provider="getData" finished-at="2020-06-16T13:54:46 IST" duration-ms="11" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[SecUserName!!!!!!!!!!!!]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2ndPassword!!!!!!!!!!!!]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileLoginCarlone -->
        <test-method signature="MobileLoginCarlone(java.lang.String, java.lang.String)[pri:0, instance:FstTest.Test2@6b19b79]" started-at="2020-06-16T13:54:46 IST" name="MobileLoginCarlone" data-provider="getData" finished-at="2020-06-16T13:54:46 IST" duration-ms="6" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[thirdUserName!!!!!!!!!!!!]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3rdPassword!!!!!!!!!!!!]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileLoginCarlone -->
        <test-method signature="demo1()[pri:0, instance:FstTest.Test2@6b19b79]" started-at="2020-06-16T13:54:46 IST" name="demo1" finished-at="2020-06-16T13:54:46 IST" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- demo1 -->
        <test-method signature="test02(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:FstTest.Test2@6b19b79]" started-at="2020-06-16T13:54:46 IST" name="test02" finished-at="2020-06-16T13:54:46 IST" duration-ms="7" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Spicejet.co]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test@123]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[abcd321]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test02 -->
      </class> <!-- FstTest.Test2 -->
      <class name="FstTest.Test1">
        <test-method signature="demo()[pri:0, instance:FstTest.Test1@60704c]" started-at="2020-06-16T13:54:46 IST" name="demo" finished-at="2020-06-16T13:54:46 IST" duration-ms="9" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- demo -->
        <test-method signature="test01()[pri:0, instance:FstTest.Test1@60704c]" started-at="2020-06-16T13:54:46 IST" name="test01" finished-at="2020-06-16T13:54:46 IST" duration-ms="9" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test01 -->
        <test-method signature="test02()[pri:0, instance:FstTest.Test1@60704c]" started-at="2020-06-16T13:54:46 IST" name="test02" finished-at="2020-06-16T13:54:46 IST" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test02 -->
      </class> <!-- FstTest.Test1 -->
    </test> <!-- TestPersonalLoan -->
    <test started-at="2020-06-16T13:54:46 IST" name="CarLoan" finished-at="2020-06-16T13:54:46 IST" duration-ms="66">
      <class name="FstTest.Test1">
        <test-method is-config="true" signature="lastexecution()[pri:0, instance:FstTest.Test1@60704c]" started-at="2020-06-16T13:54:46 IST" name="lastexecution" finished-at="2020-06-16T13:54:46 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lastexecution -->
      </class> <!-- FstTest.Test1 -->
      <class name="FstTest.Test4">
        <test-method signature="LoginAPIHomelone()[pri:0, instance:FstTest.Test4@4e91d63f]" started-at="2020-06-16T13:54:46 IST" name="LoginAPIHomelone" finished-at="2020-06-16T13:54:46 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginAPIHomelone -->
        <test-method signature="MobileloginHomelone()[pri:0, instance:FstTest.Test4@4e91d63f]" started-at="2020-06-16T13:54:46 IST" name="MobileloginHomelone" finished-at="2020-06-16T13:54:46 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileloginHomelone -->
        <test-method signature="WebloginHomelone()[pri:0, instance:FstTest.Test4@4e91d63f]" started-at="2020-06-16T13:54:46 IST" name="WebloginHomelone" finished-at="2020-06-16T13:54:46 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- WebloginHomelone -->
      </class> <!-- FstTest.Test4 -->
      <class name="FstTest.Test3">
        <test-method is-config="true" signature="precondition()[pri:0, instance:FstTest.Test3@1a04f701]" started-at="2020-06-16T13:54:46 IST" name="precondition" finished-at="2020-06-16T13:54:46 IST" duration-ms="12" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- precondition -->
        <test-method is-config="true" signature="beforemethod()[pri:0, instance:FstTest.Test3@1a04f701]" started-at="2020-06-16T13:54:46 IST" name="beforemethod" finished-at="2020-06-16T13:54:46 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method signature="LoginAPICarlone()[pri:0, instance:FstTest.Test3@1a04f701]" started-at="2020-06-16T13:54:46 IST" name="LoginAPICarlone" finished-at="2020-06-16T13:54:46 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginAPICarlone -->
        <test-method is-config="true" signature="aftermethod()[pri:0, instance:FstTest.Test3@1a04f701]" started-at="2020-06-16T13:54:46 IST" name="aftermethod" finished-at="2020-06-16T13:54:46 IST" duration-ms="10" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method is-config="true" signature="beforemethod()[pri:0, instance:FstTest.Test3@1a04f701]" started-at="2020-06-16T13:54:46 IST" name="beforemethod" finished-at="2020-06-16T13:54:46 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method signature="MobileLoginCarlone()[pri:0, instance:FstTest.Test3@1a04f701]" started-at="2020-06-16T13:54:46 IST" name="MobileLoginCarlone" finished-at="2020-06-16T13:54:46 IST" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileLoginCarlone -->
        <test-method is-config="true" signature="aftermethod()[pri:0, instance:FstTest.Test3@1a04f701]" started-at="2020-06-16T13:54:46 IST" name="aftermethod" finished-at="2020-06-16T13:54:46 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method is-config="true" signature="beforemethod()[pri:0, instance:FstTest.Test3@1a04f701]" started-at="2020-06-16T13:54:46 IST" name="beforemethod" finished-at="2020-06-16T13:54:46 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method signature="WebloginCarlone()[pri:0, instance:FstTest.Test3@1a04f701]" started-at="2020-06-16T13:54:46 IST" name="WebloginCarlone" finished-at="2020-06-16T13:54:46 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- WebloginCarlone -->
        <test-method is-config="true" signature="aftermethod()[pri:0, instance:FstTest.Test3@1a04f701]" started-at="2020-06-16T13:54:46 IST" name="aftermethod" finished-at="2020-06-16T13:54:46 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
      </class> <!-- FstTest.Test3 -->
    </test> <!-- CarLoan -->
  </suite> <!-- SuiteLoanDep -->
</testng-results>
